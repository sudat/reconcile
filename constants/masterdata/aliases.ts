// 分類: 名称ゆれ対策のエイリアス辞書（KISS）
// 目的: 入力データ内の支店名・表記ゆれを BRANCHES の支店コードへ正規化する。
// 注意: ここではコードを唯一の正準キーとする（DRY）。

// 支店名の表記ゆれ → 正規の支店コード（DRY）
export const BRANCH_ALIAS_TO_CODE: Record<string, string> = {
  // 正式名称と同義のエイリアスも許容（安全側）
  心斎橋店: "050000101",
  東京店: "050000201",
  京都店: "050000301",
  神戸店: "050000401",
  須磨店: "050000402",
  芦屋店: "050000403",
  高槻店: "050001401",
  梅田店: "050000601",
  札幌店: "050000701",
  名古屋店: "050001001",
  上野店: "050001101",
  静岡店: "050001201",
  法人外商: "050001601",
  本社: "050004001",
  下関店: "050005301",
};

// 支店コードの正規化: 会計上は同一扱いにしたいコードを統合する
// 例: 050004301(本社調整) → 050004001(本社)
export function canonicalBranchCode(code: string): string {
  const map: Record<string, string> = {
    "050004002": "050004001",
    "050004101": "050004001",
    "050004102": "050004001",
    "050004103": "050004001",
    "050004104": "050004001",
    "050004105": "050004001",
    "050004106": "050004001",
    "050004107": "050004001",
    "050004108": "050004001",
    "050004109": "050004001",
    "050004110": "050004001",
    "050004111": "050004001",
    "050004112": "050004001",
    "050004201": "050004001",
    "050004202": "050004001",
    "050004203": "050004001",
    "050004204": "050004001",
    "050004205": "050004001",
    "050004206": "050004001",
    "050004207": "050004001",
    "050004208": "050004001",
    "050004209": "050004001",
    "050004301": "050004001",
    "050004501": "050004001",
  };
  return map[code] ?? code;
}

// --- ここからオプション: 地域合算の読替（デフォルト無効） ---
// 目的: 神戸エリア（神戸店/須磨店/芦屋店）を「神戸合計」に統合して照合したい場合の読替ヘルパ。
// 使い方: 下記のコメントアウトを解除し、`applyKobeGrouping()` を TB/元帳のコード正規化後に適用してください。
// 設計: 実在しない仮想支店コードを定義し、ペア集計ではこのコードで束ねる（KISS/DRY）。

export const KOBE_GROUP_AGGREGATE_CODE = "050009901"; // 仮想: 神戸合計
const KOBE_GROUP_MEMBERS = new Set(["050000401", "050000402", "050000403"]); // 神戸/須磨/芦屋

// 機能フラグ: 地域合算（神戸グルーピング）を有効にするか
export function applyKobeGrouping(code: string): string {
  const c = canonicalBranchCode(code);
  return KOBE_GROUP_MEMBERS.has(c) ? KOBE_GROUP_AGGREGATE_CODE : c;
}

// 統一インターフェイス: ペア集計用に支店コードを正規化
// デフォルトは神戸グルーピングON（true）
export function normalizeBranchForPairing(
  code: string,
  opts?: { kobeGrouping?: boolean }
): string {
  const c = canonicalBranchCode(code);
  const useGrouping = opts?.kobeGrouping ?? true;
  return useGrouping ? applyKobeGrouping(c) : c;
}
// --- オプションここまで ---
